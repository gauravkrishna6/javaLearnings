/**
 * 
 */
package functional.programming.with.java;

import java.util.List;

/**
 * @author gkrishna
 *
 */
public class FP02Functional {

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		List<Integer> listofNumbers = List.of(1, 2, 3);
		List<String> listOfSubjects = List.of("Spring", "Spring boot", "api","microservices", "aws", "pcf", "docker", "kubernets");
		
		System.out.println(findSumOfList(listofNumbers));
		System.out.println(findSumOfSqaures(listofNumbers));
		System.out.println(findSumOfOddNumbers(listofNumbers));
		
	}

	private static Integer findSumOfOddNumbers(List<Integer> listofNumbers) {
		return listofNumbers.stream()
					.filter(x -> x%2 != 0)
					.reduce(0, Integer::sum);
	}

	private static Integer findSumOfSqaures(List<Integer> listofNumbers) {
		return listofNumbers.stream()
				.map(x -> x*x)
				.reduce(0, Integer::sum);
		
	}

	private static Integer findSumOfList(List<Integer> listofNumbers) {
		return  listofNumbers.stream()
//							.reduce(0, (a,b) -> a+b);
							.reduce(0, Integer::sum);
		
	}

}
