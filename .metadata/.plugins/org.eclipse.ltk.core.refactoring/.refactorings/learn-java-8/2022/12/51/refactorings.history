<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Copy element &apos;FP02Functional.java&apos; to &apos;functional.programming.with.java.FP02Functional.java&apos;&#x0A;- Original project: &apos;learn-java-8&apos;&#x0A;- Destination element: &apos;functional.programming.with.java.FP02Functional.java&apos;&#x0A;- Original element: &apos;functional.programming.with.java.FP02Functional.java&apos;" description="Copy compilation unit" destination="/src&lt;functional.programming.with.java{FP02Functional.java" element1="/src&lt;functional.programming.with.java{FP02Functional.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1671925452896" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;isEvenPredicate&apos; from expression &apos;x -&gt; x % 2 == 0&apos;&#x0A;- Original project: &apos;learn-java-8&apos;&#x0A;- Variable name: &apos;isEvenPredicate&apos;&#x0A;- Destination method: &apos;functional.programming.with.java.FP02FunctionalInterfaces.main(...)&apos;&#x0A;- Variable expression: &apos;x -&gt; x % 2 == 0&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;isEvenPredicate&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;functional.programming.with.java{FP02FunctionalInterfaces.java" name="isEvenPredicate" replace="true" selection="345 11" stamp="1671925603272" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;squareMapper&apos; from expression &apos;x -&gt; x * x&apos;&#x0A;- Original project: &apos;learn-java-8&apos;&#x0A;- Variable name: &apos;squareMapper&apos;&#x0A;- Destination method: &apos;functional.programming.with.java.FP02FunctionalInterfaces.main(...)&apos;&#x0A;- Variable expression: &apos;x -&gt; x * x&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;squareMapper&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;functional.programming.with.java{FP02FunctionalInterfaces.java" name="squareMapper" replace="true" selection="467 10" stamp="1671925640349" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;printAction&apos; from expression &apos;System.out::println&apos;&#x0A;- Original project: &apos;learn-java-8&apos;&#x0A;- Variable name: &apos;printAction&apos;&#x0A;- Destination method: &apos;functional.programming.with.java.FP02FunctionalInterfaces.main(...)&apos;&#x0A;- Variable expression: &apos;System.out::println&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;printAction&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;functional.programming.with.java{FP02FunctionalInterfaces.java" name="printAction" replace="true" selection="609 19" stamp="1671925687330" varType="false" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;learn-java-8&apos;&#x0A;- Original project: &apos;learn-java-8&apos;&#x0A;- Original elements:&#x0A;     functional.programming.with.java.FP02FunctionalInterfaces.java&#x0A;- Assume clone() returns an instance of the receiver type&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;functional.programming.with.java{FP02FunctionalInterfaces.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1671926689463" version="1.0"/>
</session>